/**
 * 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.11.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Wordlist;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WordlistApi
 */
public class WordlistApiTest {

    private final WordlistApi api = new WordlistApi();

    
    /**
     * Retrieve list of words for category with advanced options
     *
     * Use this to apply more complex filters to the [list of words](documentation/glossary?term&#x3D;wordlist). For example, you may only want to filter out words for which all [senses](documentation/glossary?term&#x3D;sense) match the filter, or only its &#39;prime sense&#39;. You can also filter by word length or match by substring (prefix).     &lt;div id&#x3D;\&quot;wordlist_advanced\&quot;&gt;&lt;/div&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wordlistSourceLangFiltersAdvancedGetTest() throws ApiException {
        String sourceLang = null;
        String filtersAdvanced = null;
        String appId = null;
        String appKey = null;
        String exclude = null;
        String excludeSenses = null;
        String excludePrimeSenses = null;
        String wordLength = null;
        String prefix = null;
        Boolean exact = null;
        String limit = null;
        String offset = null;
        // Wordlist response = api.wordlistSourceLangFiltersAdvancedGet(sourceLang, filtersAdvanced, appId, appKey, exclude, excludeSenses, excludePrimeSenses, wordLength, prefix, exact, limit, offset);

        // TODO: test validations
    }
    
    /**
     * Retrieve a list of words in a category
     *
     *  Use this to retrieve a [list of words](documentation/glossary?term&#x3D;wordlist) for particular [domain](documentation/glossary?term&#x3D;domain), [lexical category](documentation/glossary?term&#x3D;lexicalcategory), [register](documentation/glossary?term&#x3D;registers) and/or [region](documentation/glossary?term&#x3D;regions). View the full list of possible filters using the filters Utility endpoint.  The response only includes [headwords](documentation/glossary?term&#x3D;headword), not all their possible [inflections](documentation/glossary?term&#x3D;inflection). If you require a full [wordlist](documentation/glossary?term&#x3D;wordlist) including [inflected forms](documentation/glossary?term&#x3D;inflection), contact us and we can help.    &lt;div id&#x3D;\&quot;wordlist\&quot;&gt;&lt;/div&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wordlistSourceLangFiltersBasicGetTest() throws ApiException {
        String sourceLang = null;
        String filtersBasic = null;
        String appId = null;
        String appKey = null;
        String limit = null;
        String offset = null;
        // Wordlist response = api.wordlistSourceLangFiltersBasicGet(sourceLang, filtersBasic, appId, appKey, limit, offset);

        // TODO: test validations
    }
    
}

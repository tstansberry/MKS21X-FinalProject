/**
 * 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.11.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.RetrieveEntry;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DictionaryEntriesApi
 */
public class DictionaryEntriesApiTest {

    private final DictionaryEntriesApi api = new DictionaryEntriesApi();

    
    /**
     * Apply filters to response
     *
     *  Use filters to limit the [entry](documentation/glossary?term&#x3D;entry) information that is returned. For example, you may only require definitions and not everything else, or just [pronunciations](documentation/glossary?term&#x3D;pronunciation). The full list of filters can be retrieved from the filters Utility endpoint. You can also specify values within the filter using &#39;&#x3D;&#39;. For example &#39;grammaticalFeatures&#x3D;singular&#39;. Filters can also be combined using a semicolon.    &lt;div id&#x3D;\&quot;dictionary_entries_filters\&quot;&gt;&lt;/div&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void entriesSourceLangWordIdFiltersGetTest() throws ApiException {
        String sourceLang = null;
        String wordId = null;
        List<String> filters = null;
        String appId = null;
        String appKey = null;
        // RetrieveEntry response = api.entriesSourceLangWordIdFiltersGet(sourceLang, wordId, filters, appId, appKey);

        // TODO: test validations
    }
    
    /**
     * Retrieve dictionary information for a given word
     *
     *  Use this to retrieve definitions, [pronunciations](documentation/glossary?term&#x3D;pronunciation), example sentences, [grammatical information](documentation/glossary?term&#x3D;grammaticalfeatures) and [word origins](documentation/glossary?term&#x3D;etymology). It only works for dictionary [headwords](documentation/glossary?term&#x3D;headword), so you may need to use the [Lemmatron](documentation/glossary?term&#x3D;lemma) first if your input is likely to be an [inflected](documentation/glossary?term&#x3D;inflection) form (e.g., &#39;swimming&#39;). This would return the linked [headword](documentation/glossary?term&#x3D;headword) (e.g., &#39;swim&#39;) which you can then use in the Entries endpoint. Unless specified using a region filter, the default lookup will be the Oxford Dictionary of English (GB).    &lt;div id&#x3D;\&quot;dictionary_entries\&quot;&gt;&lt;/div&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void entriesSourceLangWordIdGetTest() throws ApiException {
        String sourceLang = null;
        String wordId = null;
        String appId = null;
        String appKey = null;
        // RetrieveEntry response = api.entriesSourceLangWordIdGet(sourceLang, wordId, appId, appKey);

        // TODO: test validations
    }
    
    /**
     * Specify GB or US dictionary for English entry search
     *
     *  USe this filter to restrict the lookup to either our Oxford Dictionary of English (GB) or New Oxford American Dictionary (US). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void entriesSourceLangWordIdRegionsregionGetTest() throws ApiException {
        String sourceLang = null;
        String wordId = null;
        String region = null;
        String appId = null;
        String appKey = null;
        // RetrieveEntry response = api.entriesSourceLangWordIdRegionsregionGet(sourceLang, wordId, region, appId, appKey);

        // TODO: test validations
    }
    
}

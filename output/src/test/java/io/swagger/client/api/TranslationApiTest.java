/**
 * 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.11.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.RetrieveEntry;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TranslationApi
 */
public class TranslationApiTest {

    private final TranslationApi api = new TranslationApi();

    
    /**
     * Retrieve translation for a given word
     *
     *  Use this to return translations for a given word. In the event that a word in the dataset does not have a direct translation, the response will be a [definition](documentation/glossary?term&#x3D;entry) in the target language.    &lt;div id&#x3D;\&quot;translation\&quot;&gt;&lt;/div&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void entriesSourceTranslationLanguageWordIdTranslationstargetTranslationLanguageGetTest() throws ApiException {
        String sourceTranslationLanguage = null;
        String wordId = null;
        String targetTranslationLanguage = null;
        String appId = null;
        String appKey = null;
        // RetrieveEntry response = api.entriesSourceTranslationLanguageWordIdTranslationstargetTranslationLanguageGet(sourceTranslationLanguage, wordId, targetTranslationLanguage, appId, appKey);

        // TODO: test validations
    }
    
}

/**
 * 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.11.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Wordlist;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchApi
 */
public class SearchApiTest {

    private final SearchApi api = new SearchApi();

    
    /**
     * Retrieve possible matches to input
     *
     *  Use this to retrieve possible [headword](documentation/glossary?term&#x3D;headword) matches for a given string of text. The results are culculated using headword matching, fuzzy matching, and [lemmatization](documentation/glossary?term&#x3D;lemma)     &lt;div id&#x3D;\&quot;search\&quot;&gt;&lt;/div&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchSourceLangGetTest() throws ApiException {
        String sourceLang = null;
        String appId = null;
        String appKey = null;
        String q = null;
        Boolean prefix = null;
        String regions = null;
        String limit = null;
        String offset = null;
        // Wordlist response = api.searchSourceLangGet(sourceLang, appId, appKey, q, prefix, regions, limit, offset);

        // TODO: test validations
    }
    
    /**
     * Retrieve possible translation matches to input
     *
     *  Use this to find matches in our translation dictionaries.    &lt;div id&#x3D;\&quot;search_translation\&quot;&gt;&lt;/div&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchSourceSearchLanguageTranslationstargetSearchLanguageGetTest() throws ApiException {
        String sourceSearchLanguage = null;
        String targetSearchLanguage = null;
        String appId = null;
        String appKey = null;
        String q = null;
        Boolean prefix = null;
        String regions = null;
        String limit = null;
        String offset = null;
        // Wordlist response = api.searchSourceSearchLanguageTranslationstargetSearchLanguageGet(sourceSearchLanguage, targetSearchLanguage, appId, appKey, q, prefix, regions, limit, offset);

        // TODO: test validations
    }
    
}

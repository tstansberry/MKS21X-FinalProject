/**
 * 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.11.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Arrayofstrings;


/**
 * SynonymsAntonymsInner
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-05T18:00:32.106-05:00")
public class SynonymsAntonymsInner   {
  @SerializedName("domains")
  private Arrayofstrings domains = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("regions")
  private Arrayofstrings regions = null;

  @SerializedName("registers")
  private Arrayofstrings registers = null;

  @SerializedName("text")
  private String text = null;

  public SynonymsAntonymsInner domains(Arrayofstrings domains) {
    this.domains = domains;
    return this;
  }

   /**
   * Get domains
   * @return domains
  **/
  @ApiModelProperty(example = "null", value = "")
  public Arrayofstrings getDomains() {
    return domains;
  }

  public void setDomains(Arrayofstrings domains) {
    this.domains = domains;
  }

  public SynonymsAntonymsInner id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SynonymsAntonymsInner language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public SynonymsAntonymsInner regions(Arrayofstrings regions) {
    this.regions = regions;
    return this;
  }

   /**
   * A particular area in which the Sense occurs, e.g. 'Great Britain'
   * @return regions
  **/
  @ApiModelProperty(example = "null", value = "A particular area in which the Sense occurs, e.g. 'Great Britain'")
  public Arrayofstrings getRegions() {
    return regions;
  }

  public void setRegions(Arrayofstrings regions) {
    this.regions = regions;
  }

  public SynonymsAntonymsInner registers(Arrayofstrings registers) {
    this.registers = registers;
    return this;
  }

   /**
   * A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
   * @return registers
  **/
  @ApiModelProperty(example = "null", value = "A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'")
  public Arrayofstrings getRegisters() {
    return registers;
  }

  public void setRegisters(Arrayofstrings registers) {
    this.registers = registers;
  }

  public SynonymsAntonymsInner text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SynonymsAntonymsInner synonymsAntonymsInner = (SynonymsAntonymsInner) o;
    return Objects.equals(this.domains, synonymsAntonymsInner.domains) &&
        Objects.equals(this.id, synonymsAntonymsInner.id) &&
        Objects.equals(this.language, synonymsAntonymsInner.language) &&
        Objects.equals(this.regions, synonymsAntonymsInner.regions) &&
        Objects.equals(this.registers, synonymsAntonymsInner.registers) &&
        Objects.equals(this.text, synonymsAntonymsInner.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domains, id, language, regions, registers, text);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SynonymsAntonymsInner {\n");
    
    sb.append("    domains: ").append(toIndentedString(domains)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    registers: ").append(toIndentedString(registers)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

